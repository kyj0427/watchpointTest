spring.application.name=backend

# ===================================================================
# DATABASE (MySQL on Google Cloud SQL)
# ===================================================================

# DataSource Settings
spring.datasource.url=jdbc:mysql://34.64.176.209:3306/watchpoint?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=watchpoint
spring.datasource.password=watchpoint1234!
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ===================================================================
# JPA & Hibernate Settings
# ===================================================================

# JPA (Java Persistence API) Settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.default_batch_fetch_size=100

# Dialect Settings for MySQL 8
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# ===================================================================
# Mybatis Settings
# ===================================================================

mybatis.mapper-locations=classpath:mappers/**/*.xml
mybatis.configuration.call-setters-on-nulls=false
# mybatis.type-aliases-package=com.watchpoint.backend.model


# ===================================================================
# MongoDB Settings
# ===================================================================
spring.data.mongodb.uri=mongodb+srv://watchpoint:xxHWPwnqIL4cRuRi@cluster0.qss9svj.mongodb.net/watchpoint?retryWrites=true&w=majority&appName=Cluster0
# spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration

# ===================================================================
# 이메일 설정
# ===================================================================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=watchpointproject@gmail.com
spring.mail.password=dtufvfolebtdhikd
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# ===================================================================
# Redis 설정
# ===================================================================
spring.data.redis.host=${SPRING_DATA_REDIS_HOST:localhost}
spring.data.redis.port=${SPRING_DATA_REDIS_PORT:6379}

logging.level.org.springframework.security=DEBUG

# Discord OAuth 설정
discord.client.id=1409087376789340271
discord.client.secret=o0WAFakmZMLIOG6SNm7fgBrLCHFEFCW6
discord.redirect.uri=http://localhost:8080/api/oauth/discord/callback

# Kakao OAuth 설정
kakao.client.id=fa197b78ef6ea110fc7f3698fb7d470e
kakao.redirect.uri=http://localhost:8080/api/oauth/kakao/callback
kakao.auth.url=https://kauth.kakao.com/oauth/authorize
kakao.token.url=https://kauth.kakao.com/oauth/token
kakao.userinfo.url=https://kapi.kakao.com/v2/user/me

# Google OAuth 설정
google.client.id=734461054881-rvd0bp5v0idst77cko402ga1ugrtcj3m.apps.googleusercontent.com
google.client.secret=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
google.redirect.uri=http://localhost:8080/api/oauth/google/callback
# Google API URL 설정
google.auth.url=https://accounts.google.com/o/oauth2/auth
google.token.url=https://oauth2.googleapis.com/token
google.userinfo.url=https://www.googleapis.com/oauth2/v2/userinfo

# ===================================================================
# 세션 관리 설정 (OAuth용)
# ===================================================================

# 세션 쿠키 설정
server.servlet.session.cookie.same-site=lax
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.http-only=false
server.servlet.session.timeout=30m

# 세션 저장소 (개발용)
spring.session.store-type=none